trigger: none

name: $(Build.SourceBranchName)-$(Date:ddMMyy)-$(Rev:rr)

pool:
 vmImage: windows-latest

parameters:
 - name: configuration
   displayName: "Configuration ex CONFIGURATION_1 "
   type: string
   default: "CONFIGURATION_1"
   values:
    - "__CONFIGURATION_1__"
    - "__CONFIGURATION_2__"
    - "__CONFIGURATION_3__"

 - name: environment
   displayName: "Select Environment: "
   type: string
   default: "Stage"
   values:
    - "Stage"
    - "Production"

variables:
 # - name: deployVariable
 # ${{ if eq(parameters.configuration, '_B_') }}:
 #  value: 'true'
 # ${{ else }}:
  #  value: 'false'
 - group : "${{ parameters.environment }}${{ parameters.configuration }}VARIABLES"
 - group: "Pipeline_Configurations"

stages:
- stage: PPBuild
  displayName: "PP Build"
  jobs:
  - job: DotnetAppliaction
    workspace:
      clean: all
    displayName: "PP Build"
    timeoutInMinutes: 360
    steps:
    - checkout: self
      fetchDepth: 1
      displayName: Cloning Repository
    - task: NuGetToolInstaller@1
      inputs:
        versionSpec: $(NuGet_Version)
    - task: NuGetCommand@2
      inputs:
        command: 'restore'
        restoreSolution: 'PPV2.sln'
        feedsToUse: 'select'
    - task: DotNetCoreCLI@2
      displayName: "Build"
      inputs:
        command: 'build'
        projects: 'PPV2.sln'
        arguments: '--configuration ${{ parameters.configuration }}'

    - task: DotNetCoreCLI@2
      displayName: "Publish"
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: 'PPV2.sln'
        arguments: '--configuration ${{ parameters.configuration }} --output $(Build.ArtifactStagingDirectory)'
  
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

